permissions:
  contents: read
on:
  push:
    branches: [main]
  pull_request:
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
jobs:
  required:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain: [stable, beta]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install Rust toolchain ${{ matrix.toolchain }}
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          components: llvm-tools-preview
          override: true
      - name: Generate lockfile if missing
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: Run tests for all features and targets
        run: cargo test --locked --all-features --all-targets
      - name: Run documentation tests
        run: cargo test --locked --all-features --doc

  os-check:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install stable Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: llvm-tools-preview
          override: true
      - name: Generate lockfile if missing
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: Run tests for all features and targets
        run: cargo test --locked --all-features --all-targets

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install nightly Rust toolchain for coverage
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: llvm-tools-preview
          override: true
      - name: Install cargo-llvm-cov
        run: cargo install cargo-llvm-cov
      - name: Generate lockfile if missing
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: Collect coverage data
        run: cargo llvm-cov --locked --all-features --lcov --output-path lcov.info
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4.1.0
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info
          name: codecov-umbrella
